from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from constants.states import MAIN_MENU, WEATHER_CITY, ANALYZE_SENTIMENT
from handlers.counter import setCounter
from handlers.climate import askCountry

menuOpciones = [
    ["Â¡Quiero saber el clima!"],
    ["Â¡Quiero contar!"],
    ["Hablar con DeltoBot ğŸ¤–"]
]

menuTeclado = ReplyKeyboardMarkup(menuOpciones, resize_keyboard=True)

async def showMainMenu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "Â¿En quÃ© te puedo ayudar? ElegÃ­ una opciÃ³n âŒ˜",
        reply_markup=menuTeclado
    )
    return MAIN_MENU

async def handleSelMenu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    texto = update.message.text

    if texto == "Â¡Quiero saber el clima!":
        return await askCountry(update, context)

    elif texto == "Â¡Quiero contar!":
        await setCounter(update, context)
        return await showMainMenu(update, context)

    elif texto == "Hablar con DeltoBot ğŸ¤–":
        await update.message.reply_text(
            "Â¡Hola, soy DeltoBot ğŸ¤– Un gusto conocerte, decime en quÃ© puedo ayudarte.\n\n"
            "1) UsÃ¡ /cortar para terminar la conversaciÃ³n.\n"
            "2) Puedes escribirme *Analiza cÃ³mo estuvo la conversaciÃ³n* para sacar un diagnÃ³stico de nuestra charla.",
            parse_mode="Markdown"
        )
        return ANALYZE_SENTIMENT

    else:
        await update.message.reply_text("Esa opciÃ³n no se encuentra. Por favor, elegÃ­ una del menÃº.")
        return MAIN_MENU
